<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2003</year><year>2016</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>megaco_transport</title>
    <prepared>Micael Karlberg</prepared>
    <responsible>Micael Karlberg</responsible>
    <docno></docno>
    <approved>Micael Karlberg</approved>
    <checked></checked>
    <date>2016-12-14</date>
    <rev>%VSN%</rev>
    <file>megaco_transport.xml</file>
  </header>
  <module>megaco_transport</module>
  <modulesummary>Megaco transport behaviour.</modulesummary>
  <description>
    <p>The functions in this module are to be exported from a
      <c><![CDATA[megaco_transport]]></c> callback module.</p>
    <marker id="send_message"></marker>
  </description>

  <funcs>
    <func>
      <name>Module:send_message(Handle, Msg) -> ok | {cancel, Reason} | Error
      </name>
      <name>Module:send_message(Handle, Msg, Resend)
        -> ok | {cancel, Reason} | Error</name>
      <fsummary>Send a Megaco message.</fsummary>
      <type>
        <v>Handle = term()</v>
        <v>Msg = binary() | iolist()</v>
        <v>Resend = boolean()</v>
        <v>Reason = term()</v>
        <v>Error = term()</v>
      </type>
      <desc>
        <p>Sends a Megaco message.</p>
        <p>If the function returns <c><![CDATA[{cancel, Reason}]]></c>,
          the transport module decided not to send the message.
          This is <em>not</em> an error. No error messages are issued
          and no error counters are incremented.
          What actions this result in depends on what kind of
          message was sent.</p>
        <p>In the case of requests, Megaco cancels the message in much
          the same way as if <seealso marker="#cancel/2">
          <c>cancel/2</c></seealso> had been called
          (after a successful send). The information is propagated
          back to the user differently depending on how the requests were
          issued:</p>
        <list type="bulleted">
          <item>
            <p>For requests issued using
              <seealso marker="megaco#call">call/3</seealso>, the information
              is delivered in the return value.</p>
          </item>
          <item>
            <p>For requests issued using
              <seealso marker="megaco#cast">cast/3</seealso>, the information
              is delivered through a call to the
              <seealso marker="megaco_user#trans_reply">
              <c>megaco_user:handle_trans_reply/4,5</c></seealso>
              callback function.</p>
          </item>
        </list>
        <p>In the case of reply, Megaco cancels the reply and the information
          of this is returned to the user through a call to the
          <seealso marker="megaco_user#trans_ack">
          <c>megaco_user:handle_trans_ack/4,5</c></seealso>.
          callback function.</p>
        <p>The <c>send_message/3</c> function is only called if config option
          <seealso marker="megaco#ui_resend_indication">
          <c>resend_indication</c></seealso>
          has been set to the value <c>flag</c>. The third
          argument, <c>Resend</c>, then indicates if the message send is
          a resend or not.</p>
        <marker id="resend_message"></marker>
      </desc>
    </func>

    <func>
      <name>Module:resend_message(Handle, Msg) -> ok | {cancel, Reason} | Error
      </name>
      <fsummary>Resend a Megaco message.</fsummary>
      <type>
        <v>Handle = term()</v>
        <v>Msg = binary() | iolist()</v>
        <v>Reason = term()</v>
        <v>Error = term()</v>
      </type>
      <desc>
        <p>Resends a Megaco message.</p>
        <p>Notice that this function is only called if the user has set
          config option <seealso marker="megaco#ui_resend_indication">
          <c>resend_indication</c></seealso> to
          <c><![CDATA[true]]></c> <em>and</em> it is in fact a message
          resend. If not <em>both</em> of these conditions are met,
          <c><![CDATA[send_message]]></c> is called.</p>
        <p>If the function returns <c><![CDATA[{cancel, Reason}]]></c>,
          the transport module decided not to send the message.
          This is <em>not</em> an error. No error messages are issued
          and no error counters are incremented.
          What actions this result in depends on what kind of
          message was sent.</p>
        <p>In the case of requests, Megaco cancels the message in much
          the same way as if <seealso marker="#cancel/2">
          <c>cancel/2</c></seealso> had been called
          (after a successful send). The information is propagated
          back to the user differently depending on how the requests were
          issued:</p>
        <list type="bulleted">
          <item>
            <p>For requests issued using
              <seealso marker="megaco#call">call/3</seealso>, the information
              is delivered in the return value.</p>
          </item>
          <item>
            <p>For requests issued using
              <seealso marker="megaco#cast">cast/3</seealso>, the information
              is delivered through a call to the
              <seealso marker="megaco_user#trans_reply">
              <c>megaco_user:handle_trans_reply/4,5</c></seealso>
              callback function.</p>
          </item>
        </list>
        <p>In the case of reply, Megaco cancels the reply and the information
          of this is returned to the user through a call to the
          <seealso marker="megaco_user#trans_ack">
          <c>megaco_user:handle_trans_ack/4,5</c></seealso>.
          callback function.</p>
      </desc>
    </func>
  </funcs>

</erlref>

