<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2014</year><year>2016</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>system_information</title>
    <prepared></prepared>
    <responsible></responsible>
    <docno>1</docno>
    <approved></approved>
    <checked></checked>
    <date></date>
    <rev></rev>
    <file>system_information.xml</file>
  </header>
  <module>system_information</module>
  <modulesummary>System information.</modulesummary>
  <description>
    <p>This module verifies and gathers information about an installed
      Erlang/OTP system.</p>
  </description>

  <funcs>
    <func>
      <name name="sanity_check" arity="0"/>
      <fsummary>Perform a sanity check.</fsummary>
      <desc>
        <p>Performs a sanity check on the system. If no issues
          are found, <c>ok</c> is returned. If issues are
          found, <c>{failed, <anno>Failures</anno>}</c> is
          returned. All failures found are part of the
          <c><anno>Failures</anno></c> list.</p>
        <p>Defined <c><anno>Failure</anno></c> elements in the
          <c><anno>Failures</anno></c> list:</p>
        <taglist>
          <tag><c><anno>InvalidAppFile</anno></c></tag>
          <item>
            <p>An application has an invalid <c>.app</c> file. The
              second element identifies the application that has the
              invalid <c>.app</c> file.</p>
          </item>
          <tag><c><anno>InvalidApplicationVersion</anno></c></tag>
          <item>
            <p>An application has an invalid application version.
              The second element identifies the invalid application
              version.</p></item>
          <tag><c><anno>MissingRuntimeDependencies</anno></c></tag>
          <item>
            <p>An application is missing
              <seealso marker="kernel:app#runtime_dependencies">runtime
              dependencies</seealso>. The second element identifies the
              application (with version) that has missing dependencies.
              The third element contains the missing dependencies.</p>
            <p>Notice that this check uses application versions that
              are loaded, or will be loaded when used. You can have
              application versions satisfying all dependencies
              installed in the system, but this check fails if they
              are not loaded. The system of course also fails when
              used like this. This can occur if you have multiple
              <seealso marker="doc/system_principles:versions">branched
              versions</seealso> of the same application installed in the
              system, but you do not use a <seealso
              marker="doc/system_principles:system_principles#BOOTSCRIPT">
              boot script</seealso> identifing the correct application
              version.</p>
          </item>
        </taglist>
        <p>The sanity check is limited to verifying
          runtime dependencies found in the <c>.app</c> files of
          all applications. This implies that the return type <em>will</em>
          change in the future.</p>
        <note>
          <p>Return value <c>ok</c> only means that
            <c>sanity_check/0</c> found no issues, <em>not</em>
            that no issues exist.</p></note>
      </desc>
    </func>

    <func>
      <name name="to_file" arity="1"/>
      <fsummary>Write miscellaneous system information to file.</fsummary>
      <desc>
        <p>Writes miscellaneous system information to file. This
          information is typically requested by the Erlang/OTP team
          at Ericsson AB when reporting an issue.</p>
      </desc>
    </func>
  </funcs>
</erlref>

